apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "com.abooc.doodles"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 2
        versionName '0.1'
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def formattedDate = computeVersionName(null);
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name.replace(".apk", "-v" + formattedDate + ".apk")
                    )
                }
            }
        }
    }
    productFlavors {
        alpha {
            versionName computeVersionName('alpha')
            applicationId 'com.abooc.doodles.alpha'
//            resValue "string", "app_name", "Doodles " + name
        }
    }

    sourceSets {
        // Still using old Maven archetype based directory structure and
        // not the new standard Gradle one
        main {
            java.srcDirs = ['src/main/java']
//            res.srcDirs = ['src/main/res', 'src/main/alpha/res']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
}


def getDate(){
    def date = new Date()
    def dateFormat = date.format('yyyyMMdd')
    return dateFormat
}

def computeVersionName(label){
    return "${android.defaultConfig.versionName}.${android.defaultConfig.versionCode}" +
            "${(label == null || "".equals(label)) ? "" : ("-" + label)}-${date}"
}


// The next block is for setting the release signing config from a file outside the git repo
// To make release builds work:
// Copy the signing.properties.sample file to ~/.sign/signing.properties and adjust the values.
def Properties props = new Properties()
//def propFile = new File(System.getProperty('user.home'), '.sign/signing.properties')
def propFile = new File(System.getProperty('user.home'), '/Documents/DAYU/keystore/.signingConfigs/[app-google-doodles]signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        System.err.println propFile.toString() + ' found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    System.err.println propFile.toString() + ' not found'
    android.buildTypes.release.signingConfig = null
}

